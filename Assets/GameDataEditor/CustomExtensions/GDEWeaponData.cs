// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by the Game Data Editor.
//
//      Changes to this file will be lost if the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections.Generic;

using GameDataEditor;

namespace GameDataEditor
{
    public class GDEWeaponData : IGDEData
    {
        private static string OwnedKey = "Owned";
		private bool _Owned;
        public bool Owned
        {
            get { return _Owned; }
            set {
                if (_Owned != value)
                {
                    _Owned = value;
                    GDEDataManager.SetBool(_key+"_"+OwnedKey, _Owned);
                }
            }
        }

        private static string EquippedKey = "Equipped";
		private bool _Equipped;
        public bool Equipped
        {
            get { return _Equipped; }
            set {
                if (_Equipped != value)
                {
                    _Equipped = value;
                    GDEDataManager.SetBool(_key+"_"+EquippedKey, _Equipped);
                }
            }
        }

        private static string IdKey = "Id";
		private int _Id;
        public int Id
        {
            get { return _Id; }
            set {
                if (_Id != value)
                {
                    _Id = value;
                    GDEDataManager.SetInt(_key+"_"+IdKey, _Id);
                }
            }
        }

        private static string NameKey = "Name";
		private string _Name;
        public string Name
        {
            get { return _Name; }
            set {
                if (_Name != value)
                {
                    _Name = value;
                    GDEDataManager.SetString(_key+"_"+NameKey, _Name);
                }
            }
        }

        private static string PriceKey = "Price";
		private string _Price;
        public string Price
        {
            get { return _Price; }
            set {
                if (_Price != value)
                {
                    _Price = value;
                    GDEDataManager.SetString(_key+"_"+PriceKey, _Price);
                }
            }
        }

        private static string WeaponModulKey = "WeaponModul";
		private GameObject _WeaponModul;
        public GameObject WeaponModul
        {
            get { return _WeaponModul; }
            set {
                if (_WeaponModul != value)
                {
                    _WeaponModul = value;
                    GDEDataManager.SetGameObject(_key+"_"+WeaponModulKey, _WeaponModul);
                }
            }
        }

        private static string WeaponAttributesKey = "WeaponAttributes";
		public List<GDEWeaponAttributeData>      WeaponAttributes;
		public void Set_WeaponAttributes()
        {
	        GDEDataManager.SetCustomList(_key+"_"+WeaponAttributesKey, WeaponAttributes);
		}
		

        public GDEWeaponData()
		{
			_key = string.Empty;
		}

		public GDEWeaponData(string key)
		{
			_key = key;
		}
		
        public override void LoadFromDict(string dataKey, Dictionary<string, object> dict)
        {
            _key = dataKey;

			if (dict == null)
				LoadFromSavedData(dataKey);
			else
			{
                dict.TryGetBool(OwnedKey, out _Owned);
                dict.TryGetBool(EquippedKey, out _Equipped);
                dict.TryGetInt(IdKey, out _Id);
                dict.TryGetString(NameKey, out _Name);
                dict.TryGetString(PriceKey, out _Price);
                dict.TryGetGameObject(WeaponModulKey, out _WeaponModul);

                dict.TryGetCustomList(WeaponAttributesKey, out WeaponAttributes);
                LoadFromSavedData(dataKey);
			}
		}

        public override void LoadFromSavedData(string dataKey)
		{
			_key = dataKey;
			
            _Owned = GDEDataManager.GetBool(_key+"_"+OwnedKey, _Owned);
            _Equipped = GDEDataManager.GetBool(_key+"_"+EquippedKey, _Equipped);
            _Id = GDEDataManager.GetInt(_key+"_"+IdKey, _Id);
            _Name = GDEDataManager.GetString(_key+"_"+NameKey, _Name);
            _Price = GDEDataManager.GetString(_key+"_"+PriceKey, _Price);
            _WeaponModul = GDEDataManager.GetGameObject(_key+"_"+WeaponModulKey, _WeaponModul);

            WeaponAttributes = GDEDataManager.GetCustomList(_key+"_"+WeaponAttributesKey, WeaponAttributes);
         }

        public void Reset_Owned()
        {
            GDEDataManager.ResetToDefault(_key, OwnedKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetBool(OwnedKey, out _Owned);
        }

        public void Reset_Equipped()
        {
            GDEDataManager.ResetToDefault(_key, EquippedKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetBool(EquippedKey, out _Equipped);
        }

        public void Reset_Id()
        {
            GDEDataManager.ResetToDefault(_key, IdKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(IdKey, out _Id);
        }

        public void Reset_Name()
        {
            GDEDataManager.ResetToDefault(_key, NameKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetString(NameKey, out _Name);
        }

        public void Reset_Price()
        {
            GDEDataManager.ResetToDefault(_key, PriceKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetString(PriceKey, out _Price);
        }

        public void Reset_WeaponModul()
        {
            GDEDataManager.ResetToDefault(_key, WeaponModulKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetGameObject(WeaponModulKey, out _WeaponModul);
        }

        public void Reset_WeaponAttributes()
		{
			GDEDataManager.ResetToDefault(_key, WeaponAttributesKey);

			Dictionary<string, object> dict;
			GDEDataManager.Get(_key, out dict);

			dict.TryGetCustomList(WeaponAttributesKey, out WeaponAttributes);
			WeaponAttributes = GDEDataManager.GetCustomList(_key+"_"+WeaponAttributesKey, WeaponAttributes);

			WeaponAttributes.ForEach(x => x.ResetAll());
		}

        public void ResetAll()
        {
            GDEDataManager.ResetToDefault(_key, OwnedKey);
            GDEDataManager.ResetToDefault(_key, EquippedKey);
            GDEDataManager.ResetToDefault(_key, IdKey);
            GDEDataManager.ResetToDefault(_key, NameKey);
            GDEDataManager.ResetToDefault(_key, PriceKey);
            GDEDataManager.ResetToDefault(_key, WeaponModulKey);
            GDEDataManager.ResetToDefault(_key, WeaponAttributesKey);

            Reset_WeaponAttributes();

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            LoadFromDict(_key, dict);
        }
    }
}
