// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by the Game Data Editor.
//
//      Changes to this file will be lost if the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections.Generic;

using GameDataEditor;

namespace GameDataEditor
{
    public class GDEWeaponLevelPropertyData : IGDEData
    {
        private static string CostKey = "Cost";
		private int _Cost;
        public int Cost
        {
            get { return _Cost; }
            set {
                if (_Cost != value)
                {
                    _Cost = value;
                    GDEDataManager.SetInt(_key+"_"+CostKey, _Cost);
                }
            }
        }

        private static string IncreaseValueKey = "IncreaseValue";
		private float _IncreaseValue;
        public float IncreaseValue
        {
            get { return _IncreaseValue; }
            set {
                if (_IncreaseValue != value)
                {
                    _IncreaseValue = value;
                    GDEDataManager.SetFloat(_key+"_"+IncreaseValueKey, _IncreaseValue);
                }
            }
        }

        public GDEWeaponLevelPropertyData()
		{
			_key = string.Empty;
		}

		public GDEWeaponLevelPropertyData(string key)
		{
			_key = key;
		}
		
        public override void LoadFromDict(string dataKey, Dictionary<string, object> dict)
        {
            _key = dataKey;

			if (dict == null)
				LoadFromSavedData(dataKey);
			else
			{
                dict.TryGetInt(CostKey, out _Cost);
                dict.TryGetFloat(IncreaseValueKey, out _IncreaseValue);
                LoadFromSavedData(dataKey);
			}
		}

        public override void LoadFromSavedData(string dataKey)
		{
			_key = dataKey;
			
            _Cost = GDEDataManager.GetInt(_key+"_"+CostKey, _Cost);
            _IncreaseValue = GDEDataManager.GetFloat(_key+"_"+IncreaseValueKey, _IncreaseValue);
         }

        public void Reset_Cost()
        {
            GDEDataManager.ResetToDefault(_key, CostKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(CostKey, out _Cost);
        }

        public void Reset_IncreaseValue()
        {
            GDEDataManager.ResetToDefault(_key, IncreaseValueKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetFloat(IncreaseValueKey, out _IncreaseValue);
        }

        public void ResetAll()
        {
            GDEDataManager.ResetToDefault(_key, IncreaseValueKey);
            GDEDataManager.ResetToDefault(_key, CostKey);


            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            LoadFromDict(_key, dict);
        }
    }
}
